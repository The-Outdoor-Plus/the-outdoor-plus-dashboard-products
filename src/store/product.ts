import { defineStore } from "pinia";
import { toTypedSchema } from '@vee-validate/yup';
import * as yup from 'yup';

interface State<T> {
  priceTypeList: { value: string, key: string }[];
  sizes: string[];
  formValidation: T;
  initialValues: any;
  productKeys: string[];
}

export const useProductStore = defineStore('product', {
  state: (): State<typeof formValidation> => {
    const priceTypeList = [
      { value: 'Internet', key: 'internet' },
      { value: 'MAP', key: 'map' }, 
      { value: 'MSRP', key: 'msrp' },
      { value: 'Group', key: 'group' },
      { value: 'Dealer', key: 'dealer' }, 
      { value: 'Distributor', key: 'distributor' }, 
      { value: 'Landscape', key: 'landscape' }, 
      { value: 'Master Distributor', key: 'master_distributor' },
    ];
    const sizes = [
      '36"',
      '30"',
      '24"',
      '48"',
      '60"',
      '72"',
      '18"',
      '84"',
      '96"',
      '42"',
      '29"',
      '24"x12"',
      '39"',
      '28"',
      '31"',
      '27"',
      '12"',
      '38"',
      '36"x12"',
      '48"x12"',
      '96"x12"',
      '84"x12"',
      '72"x12"',
      '60"x12"',
      '32"x18"',
      '36"x24"',
      '120"',
      '30"x12"',
      '30"x6"',
      '36"x6"',
      '54"',
      '24"x6"',
      '8"',
      '108"',
      '37"',
      '33"',
      '66"',
      '42"x12"',
      '12"x60"',
      '12"x48"',
      '30"x30"',
      '48"24',
      '12"x24"',
    ];
    const formValidation = toTypedSchema(
      yup.object({
        collection_id: yup.number().nullable(),
        name: yup.string().min(2).required(),
        sku: yup.string().min(2),
        upc_codes: yup.string(),
        encoded_upc_codes: yup.string(),
        relation: yup.string().required(),
        product_length: yup.string(),
        product_diameter: yup.string(),
        product_width: yup.string(),
        product_height: yup.string(),
        base_length: yup.string(),
        base_diameter: yup.string(),
        base_width: yup.string(),
        base_opening: yup.string(),
        toe_kick: yup.string(),
        soil_usage: yup.string(),
        scupper_width: yup.string(),
        scupper_inlet_opening: yup.string(),
        gpm: yup.string(),
        fire_glass: yup.string(),
        ba_length: yup.string(),
        ba_diameter: yup.string(),
        ba_width: yup.string(),
        ba_depth: yup.string(),
        burner_shape: yup.string(),
        burner_length: yup.string(),
        burner_diameter: yup.string(),
        compatible_canvas_cover: yup.string(),
        compatible_bullet_burner: yup.string(),
        compatible_glass_wind_guard: yup.string(),
        access_door: yup.boolean(),
        category_id: yup.number().nullable(),
        shape_id: yup.number().nullable(),
        material_id: yup.number().nullable(),
        color_id: yup.number().nullable(),
        ignition_id: yup.number().nullable(),
        gas_id: yup.number().nullable(),
        product_serial_base: yup.string(),
        base_color_id: yup.number().nullable(),
        base_material_id: yup.number().nullable(),
        published: yup.boolean(),
        enabled: yup.boolean(),
        company_division: yup.string(),
        short_description: yup.string(),
        description: yup.string(),
      }),
    );

    const initialValues = {
      name: '',
      sku: '',
      upcCodes: '',
      encodedUpcCodes: '',
      relation: '',
      productLength: '',
      productDiameter: '',
      productWidth: '',
      productHeight: '',
      baseLength: '',
      baseDiameter: '',
      baseWidth: '',
      baseOpening: '',
      toeKick: '',
      soilUsage: '',
      scupperWidth: '',
      scupperInletOpening: '',
      gpm: '',
      fireGlass: '',
      baLength: '',
      baDiameter: '',
      baWidth: '',
      baDepth: '',
      burnerShape: '',
      burnerLength: '',
      burnerDiameter: '',
      compatibleCanvasCover: '',
      compatibleBulletBurner: '',
      compatibleGlassWindGuard: '',
      accessDoor: false,
      productSerialBase: '',
      published: false,
      enabled: false,
      companyDivision: '',
      shortDescription: '',
      description: '',
    }

    const productKeys = [
      'id',
      'sku',
      'upc_codes',
      'encoded_upc_codes',
      'relation',
      'product_length',
      'product_diameter',
      'product_width',
      'product_height',
      'base_length',
      'base_diameter',
      'base_width',
      'base_opening',
      'toe_kick',
      'soil_usage',
      'scupper_width',
      'scupper_inlet_opening',
      'gpm',
      'fire_glass',
      'ba_length',
      'ba_diameter',
      'ba_width',
      'ba_depth',
      'burner_shape',
      'burner_length',
      'burner_diameter',
      'compatible_canvas_cover',
      'compatible_bullet_burner',
      'compatible_glass_wind_guard',
      'access_door',
      'parent_id',
      'collection_id',
      'category_id',
      'shape_id',
      'material_id',
      'color_id',
      'ignition_id',
      'gas_id',
      'product_serial_base',
      'certifications',
      'base_color_id',
      'base_material_id',
      'published',
      'enabled',
      'created_by',
      'updated_by',
      'company_division',
      'updated_at',
      'created_at',
      'name',
      'short_description',
      'description',
      'dealer_prices',
      'distributor_prices',
      'group_prices',
      'internet_prices',
      'landscape_prices',
      'map_prices',
      'master_distributor_prices',
      'msrp_prices',
      'images',
    ];

    return {
      priceTypeList,
      sizes,
      formValidation,
      initialValues,
      productKeys,
    }
  },
  actions: {},
  getters: {},
});